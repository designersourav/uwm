{"ast":null,"code":"import _classCallCheck from \"D:/DGTLFOLK/react/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/DGTLFOLK/react/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/DGTLFOLK/react/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/DGTLFOLK/react/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/DGTLFOLK/react/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\DGTLFOLK\\\\react\\\\react-app\\\\src\\\\Map\\\\OLMapFragment.js\";\nimport React from 'react'; // Start Openlayers imports\n\nimport { Map, View } from 'ol'; // import {GeoJSON, XYZ} from 'ol/format'\n// import {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer'\n\nimport { Tile as TileLayer } from 'ol/layer'; // import {Vector as VectorSource, OSM as OSMSource, XYZ as XYZSource, TileWMS as TileWMSSource} from 'ol/source'\n\nimport { XYZ as XYZSource, TileWMS as TileWMSSource } from 'ol/source'; // import {Select as SelectInteraction, defaults as DefaultInteractions} from 'ol/interaction'\n// import {Attribution, ScaleLine, ZoomSlider, Zoom, Rotate, MousePosition, OverviewMap, defaults as DefaultControls} from 'ol/control'\n\nimport { ScaleLine, ZoomSlider, MousePosition, OverviewMap, defaults as DefaultControls } from 'ol/control'; // import {Style, Fill as FillStyle, RegularShape as RegularShapeStyle, Stroke as StrokeStyle} from 'ol/style'\n// import {Projection, get as getProjection} from 'ol/proj'\n// End Openlayers imports\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OLMapFragment = /*#__PURE__*/function (_React$Component) {\n  _inherits(OLMapFragment, _React$Component);\n\n  var _super = _createSuper(OLMapFragment);\n\n  function OLMapFragment(props) {\n    var _this;\n\n    _classCallCheck(this, OLMapFragment);\n\n    _this = _super.call(this, props);\n    _this.updateDimensions = _this.updateDimensions.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(OLMapFragment, [{\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      var h = window.innerWidth >= 992 ? window.innerHeight : 400;\n      this.setState({\n        height: h\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener('resize', this.updateDimensions);\n      this.updateDimensions();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Create an Openlayer Map instance with two tile layers\n      var map = new Map({\n        //  Display the map in the div with the id of map\n        target: 'map',\n        layers: [new TileLayer({\n          source: new XYZSource({\n            url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n            projection: 'EPSG:3857'\n          })\n        }), new TileLayer({\n          source: new TileWMSSource({\n            url: 'https://ahocevar.com/geoserver/wms',\n            params: {\n              layers: 'topp:states',\n              'TILED': true\n            },\n            projection: 'EPSG:4326'\n          }),\n          name: 'USA'\n        })],\n        // Add in the following map controls\n        controls: DefaultControls().extend([new ZoomSlider(), new MousePosition(), new ScaleLine(), new OverviewMap()]),\n        // Render the tile layers in a map view with a Mercator projection\n        view: new View({\n          projection: 'EPSG:3857',\n          center: [0, 0],\n          zoom: 2\n        })\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        width: '100%',\n        height: this.state.height,\n        backgroundColor: '#cccccc'\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return OLMapFragment;\n}(React.Component);\n\nexport default OLMapFragment;","map":{"version":3,"sources":["D:/DGTLFOLK/react/react-app/src/Map/OLMapFragment.js"],"names":["React","Map","View","Tile","TileLayer","XYZ","XYZSource","TileWMS","TileWMSSource","ScaleLine","ZoomSlider","MousePosition","OverviewMap","defaults","DefaultControls","OLMapFragment","props","updateDimensions","bind","h","window","innerWidth","innerHeight","setState","height","addEventListener","map","target","layers","source","url","projection","params","name","controls","extend","view","center","zoom","removeEventListener","style","width","state","backgroundColor","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAyB,IAAzB,C,CACA;AACA;;AACA,SAAQC,IAAI,IAAIC,SAAhB,QAAgC,UAAhC,C,CACA;;AACA,SAAQC,GAAG,IAAIC,SAAf,EAA0BC,OAAO,IAAIC,aAArC,QAAyD,WAAzD,C,CACA;AACA;;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,aAA/B,EAA8CC,WAA9C,EAA2DC,QAAQ,IAAIC,eAAvE,QAA6F,YAA7F,C,CACA;AACA;AAEA;;;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AAFe;AAGlB;;;;WACD,4BAAkB;AACd,UAAMC,CAAC,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2BD,MAAM,CAACE,WAAlC,GAAgD,GAA1D;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEL;AAAT,OAAd;AACH;;;WACD,8BAAoB;AAChBC,MAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkC,KAAKR,gBAAvC;AACA,WAAKA,gBAAL;AACH;;;WACD,6BAAmB;AAEf;AACA,UAAMS,GAAG,GAAG,IAAIzB,GAAJ,CAAQ;AAChB;AACA0B,QAAAA,MAAM,EAAE,KAFQ;AAGhBC,QAAAA,MAAM,EAAE,CACJ,IAAIxB,SAAJ,CAAc;AACVyB,UAAAA,MAAM,EAAE,IAAIvB,SAAJ,CAAc;AAClBwB,YAAAA,GAAG,EAAE,sDADa;AAElBC,YAAAA,UAAU,EAAE;AAFM,WAAd;AADE,SAAd,CADI,EAOJ,IAAI3B,SAAJ,CAAc;AACVyB,UAAAA,MAAM,EAAE,IAAIrB,aAAJ,CAAkB;AACtBsB,YAAAA,GAAG,EAAE,oCADiB;AAEtBE,YAAAA,MAAM,EAAE;AACJJ,cAAAA,MAAM,EAAE,aADJ;AAEJ,uBAAS;AAFL,aAFc;AAMtBG,YAAAA,UAAU,EAAE;AANU,WAAlB,CADE;AASVE,UAAAA,IAAI,EAAE;AATI,SAAd,CAPI,CAHQ;AAsBhB;AACAC,QAAAA,QAAQ,EAAEpB,eAAe,GAAGqB,MAAlB,CAAyB,CAC/B,IAAIzB,UAAJ,EAD+B,EAE/B,IAAIC,aAAJ,EAF+B,EAG/B,IAAIF,SAAJ,EAH+B,EAI/B,IAAIG,WAAJ,EAJ+B,CAAzB,CAvBM;AA6BhB;AACAwB,QAAAA,IAAI,EAAE,IAAIlC,IAAJ,CAAS;AACX6B,UAAAA,UAAU,EAAE,WADD;AAEXM,UAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFG;AAGXC,UAAAA,IAAI,EAAE;AAHK,SAAT;AA9BU,OAAR,CAAZ;AAoCH;;;WACD,gCAAsB;AAClBlB,MAAAA,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtB,gBAA1C;AACH;;;WACD,kBAAQ;AACJ,UAAMuB,KAAK,GAAG;AACVC,QAAAA,KAAK,EAAE,MADG;AAEVjB,QAAAA,MAAM,EAAC,KAAKkB,KAAL,CAAWlB,MAFR;AAGVmB,QAAAA,eAAe,EAAE;AAHP,OAAd;AAKA,0BACI;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,KAAK,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH;;;;EAlEuBxC,KAAK,CAAC4C,S;;AAoElC,eAAe7B,aAAf","sourcesContent":["import React from 'react';\r\n\r\n// Start Openlayers imports\r\nimport {Map, View } from 'ol'\r\n// import {GeoJSON, XYZ} from 'ol/format'\r\n// import {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer'\r\nimport {Tile as TileLayer} from 'ol/layer'\r\n// import {Vector as VectorSource, OSM as OSMSource, XYZ as XYZSource, TileWMS as TileWMSSource} from 'ol/source'\r\nimport {XYZ as XYZSource, TileWMS as TileWMSSource} from 'ol/source'\r\n// import {Select as SelectInteraction, defaults as DefaultInteractions} from 'ol/interaction'\r\n// import {Attribution, ScaleLine, ZoomSlider, Zoom, Rotate, MousePosition, OverviewMap, defaults as DefaultControls} from 'ol/control'\r\nimport {ScaleLine, ZoomSlider, MousePosition, OverviewMap, defaults as DefaultControls} from 'ol/control'\r\n// import {Style, Fill as FillStyle, RegularShape as RegularShapeStyle, Stroke as StrokeStyle} from 'ol/style'\r\n// import {Projection, get as getProjection} from 'ol/proj'\r\n\r\n// End Openlayers imports\r\n\r\nclass OLMapFragment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateDimensions = this.updateDimensions.bind(this)\r\n    }\r\n    updateDimensions(){\r\n        const h = window.innerWidth >= 992 ? window.innerHeight : 400\r\n        this.setState({height: h})\r\n    }\r\n    componentWillMount(){\r\n        window.addEventListener('resize', this.updateDimensions)\r\n        this.updateDimensions()\r\n    }\r\n    componentDidMount(){\r\n\r\n        // Create an Openlayer Map instance with two tile layers\r\n        const map = new Map({\r\n            //  Display the map in the div with the id of map\r\n            target: 'map',\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZSource({\r\n                        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n                        projection: 'EPSG:3857'\r\n                    })\r\n                }),\r\n                new TileLayer({\r\n                    source: new TileWMSSource({\r\n                        url: 'https://ahocevar.com/geoserver/wms',\r\n                        params: {\r\n                            layers: 'topp:states',\r\n                            'TILED': true,\r\n                        },\r\n                        projection: 'EPSG:4326'\r\n                    }),\r\n                    name: 'USA'\r\n                }),\r\n            ],\r\n            // Add in the following map controls\r\n            controls: DefaultControls().extend([\r\n                new ZoomSlider(),\r\n                new MousePosition(),\r\n                new ScaleLine(),\r\n                new OverviewMap()\r\n            ]),\r\n            // Render the tile layers in a map view with a Mercator projection\r\n            view: new View({\r\n                projection: 'EPSG:3857',\r\n                center: [0, 0],\r\n                zoom: 2\r\n            })\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this.updateDimensions)\r\n    }\r\n    render(){\r\n        const style = {\r\n            width: '100%',\r\n            height:this.state.height,\r\n            backgroundColor: '#cccccc',\r\n        }\r\n        return (\r\n            <div id='map' style={style} >\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default OLMapFragment"]},"metadata":{},"sourceType":"module"}